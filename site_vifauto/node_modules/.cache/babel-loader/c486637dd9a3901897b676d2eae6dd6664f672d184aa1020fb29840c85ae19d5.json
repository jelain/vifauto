{"ast":null,"code":"import { normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode, vShow as _vShow } from \"vue\";\nconst _hoisted_1 = {\n  class: \"fournisseurhoraire\"\n};\nconst _hoisted_2 = {\n  class: \"horaire\"\n};\nconst _hoisted_3 = {\n  class: \"jour\"\n};\nconst _hoisted_4 = {\n  class: \"heures\"\n};\nconst _hoisted_5 = [\"onUpdate:modelValue\"];\nconst _hoisted_6 = [\"onUpdate:modelValue\"];\nconst _hoisted_7 = [\"onClick\"];\nconst _hoisted_8 = [\"onClick\"];\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"p\", {\n    class: _normalizeClass({\n      active: _ctx.showHoraire\n    }),\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.toggleHoraire())\n  }, \" Horaires d'ouverture et de fermeture \", 2 /* CLASS */), _withDirectives(_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"table\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.horaires, jour => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: jour\n    }, [_createElementVNode(\"td\", _hoisted_3, _toDisplayString(jour.jour_semaine), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_4, [_ctx.editMode[jour.id] ? (_openBlock(), _createElementBlock(_Fragment, {\n      key: 0\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"time\",\n      \"onUpdate:modelValue\": $event => _ctx.newOuvertue[jour.id] = $event\n    }, null, 8 /* PROPS */, _hoisted_5), [[_vModelText, _ctx.newOuvertue[jour.id]]]), _createTextVNode(\" - \"), _withDirectives(_createElementVNode(\"input\", {\n      type: \"time\",\n      \"onUpdate:modelValue\": $event => _ctx.newFermeture[jour.id] = $event\n    }, null, 8 /* PROPS */, _hoisted_6), [[_vModelText, _ctx.newFermeture[jour.id]]]), _createElementVNode(\"i\", {\n      class: \"fa-solid fa-pen\",\n      onClick: $event => _ctx.saveAndToggle(jour.id)\n    }, null, 8 /* PROPS */, _hoisted_7)], 64 /* STABLE_FRAGMENT */)) : (_openBlock(), _createElementBlock(_Fragment, {\n      key: 1\n    }, [_createTextVNode(_toDisplayString(jour.heure_ouverture ? jour.heure_ouverture.slice(0, 5) : \"Non renseigné\") + \" - \" + _toDisplayString(jour.heure_fermeture ? jour.heure_fermeture.slice(0, 5) : \"Non renseigné\") + \" \", 1 /* TEXT */), _createElementVNode(\"i\", {\n      class: \"fa-solid fa-pen\",\n      onClick: $event => _ctx.toggleEditMode(jour.id)\n    }, null, 8 /* PROPS */, _hoisted_8)], 64 /* STABLE_FRAGMENT */))])]);\n  }), 128 /* KEYED_FRAGMENT */))])], 512 /* NEED_PATCH */), [[_vShow, _ctx.showHoraire]])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_normalizeClass","active","_ctx","showHoraire","onClick","_cache","$event","toggleHoraire","_hoisted_2","_Fragment","_renderList","horaires","jour","key","_hoisted_3","_toDisplayString","jour_semaine","_hoisted_4","editMode","id","type","newOuvertue","_hoisted_5","_createTextVNode","newFermeture","_hoisted_6","saveAndToggle","_hoisted_7","heure_ouverture","slice","heure_fermeture","toggleEditMode","_hoisted_8"],"sources":["/Users/jelain/Desktop/Stage VifAuto/GIT/vifauto/site_vifauto/src/components/FournisseurHoraire.vue"],"sourcesContent":["<template>\n  <div class=\"fournisseurhoraire\">\n    <p :class=\"{ active: showHoraire }\" @click=\"toggleHoraire()\">\n      Horaires d'ouverture et de fermeture\n    </p>\n    <div class=\"horaire\" v-show=\"showHoraire\">\n      <table>\n        <tr v-for=\"jour in horaires\" :key=\"jour\">\n          <td class=\"jour\">{{ jour.jour_semaine }}</td>\n          <td class=\"heures\">\n            <template v-if=\"editMode[jour.id]\">\n              <input type=\"time\" v-model=\"newOuvertue[jour.id]\" />\n              -\n              <input type=\"time\" v-model=\"newFermeture[jour.id]\" />\n              <i class=\"fa-solid fa-pen\" @click=\"saveAndToggle(jour.id)\"></i>\n            </template>\n            <template v-else>\n              {{\n                jour.heure_ouverture\n                  ? jour.heure_ouverture.slice(0, 5)\n                  : \"Non renseigné\"\n              }}\n              -\n              {{\n                jour.heure_fermeture\n                  ? jour.heure_fermeture.slice(0, 5)\n                  : \"Non renseigné\"\n              }}\n              <i class=\"fa-solid fa-pen\" @click=\"toggleEditMode(jour.id)\"></i>\n            </template>\n          </td>\n        </tr>\n      </table>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      horaires: [],\n      showHoraire: false,\n      editMode: {}, // Nouvelle propriété pour gérer l'édition des horaires\n      newOuvertue: {}, // Nouvelle propriété\n      newFermeture: {},\n    };\n  },\n  props: {\n  showNote: Boolean\n}\n\n  mounted() {\n    this.fournisseurId = parseInt(this.$route.params.id);\n    this.getHoraires();\n  },\n  methods: {\n    toggleHoraire() {\n      this.showHoraire = !this.showHoraire;\n      if (this.showHoraire) {\n        this.$emit(\"hide-note\");\n      }\n    },\n\n    saveAndToggle(jourId) {\n      this.saveEdit(jourId)\n        .then(() => {\n          // Mettre à jour localement les valeurs des horaires\n          const index = this.horaires.findIndex((jour) => jour.id === jourId);\n          if (index !== -1) {\n            this.horaires[index].heure_ouverture = this.newOuvertue[jourId];\n            this.horaires[index].heure_fermeture = this.newFermeture[jourId];\n          }\n        })\n        .finally(() => {\n          // Toggle edit mode après la sauvegarde\n          this.toggleEditMode(jourId);\n        });\n    },\n\n    toggleEditMode(jourId) {\n      this.editMode[jourId] = !this.editMode[jourId];\n    },\n\n    async saveEdit(jourId) {\n      try {\n        await axios.put(`http://localhost:3000/api/horaires/set/id=${jourId}`, {\n          heureOuverture: this.newOuvertue[jourId],\n          heureFermeture: this.newFermeture[jourId],\n          jourId: jourId,\n          fournisseurId: this.fournisseurId,\n        });\n      } catch (error) {\n        console.error(\"Error updating horaire:\", error);\n      }\n    },\n\n    async getHoraires() {\n      try {\n        const response = await axios.get(\n          `http://localhost:3000/api/horaires/id=${this.fournisseurId}`\n        ); // Remplacez l'URL par celle de votre API\n        this.horaires = response.data;\n      } catch (error) {\n        console.error(\"Error fetching horaires:\", error);\n      }\n    },\n  },\n\n  watch: {\n    $route() {\n      this.fournisseurId = parseInt(this.$route.params.id);\n      this.getHoraires();\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\n.fournisseurhoraire {\n  .horaire {\n    display: flex;\n    justify-content: right;\n    .jour {\n      text-align: right;\n      padding-right: 10px;\n    }\n  }\n}\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAoB;;EAIxBA,KAAK,EAAC;AAAS;;EAGVA,KAAK,EAAC;AAAM;;EACZA,KAAK,EAAC;AAAQ;mBAT5B;mBAAA;mBAAA;mBAAA;;uBACEC,mBAAA,CAiCM,OAjCNC,UAiCM,GAhCJC,mBAAA,CAEI;IAFAH,KAAK,EAFbI,eAAA;MAAAC,MAAA,EAEyBC,IAAA,CAAAC;IAAW;IAAKC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEJ,IAAA,CAAAK,aAAa;KAAI,wCAE7D,kB,gBACAR,mBAAA,CA4BM,OA5BNS,UA4BM,GA3BJT,mBAAA,CA0BQ,iB,kBAzBNF,mBAAA,CAwBKY,SAAA,QA/BbC,WAAA,CAO2BR,IAAA,CAAAS,QAAQ,EAAhBC,IAAI;yBAAff,mBAAA,CAwBK;MAxByBgB,GAAG,EAAED;IAAI,IACrCb,mBAAA,CAA6C,MAA7Ce,UAA6C,EAAAC,gBAAA,CAAzBH,IAAI,CAACI,YAAY,kBACrCjB,mBAAA,CAqBK,MArBLkB,UAqBK,GApBaf,IAAA,CAAAgB,QAAQ,CAACN,IAAI,CAACO,EAAE,K,cAAhCtB,mBAAA,CAKWY,SAAA;MAfvBI,GAAA;IAAA,I,gBAWcd,mBAAA,CAAoD;MAA7CqB,IAAI,EAAC,MAAM;MAXhC,uBAAAd,MAAA,IAW0CJ,IAAA,CAAAmB,WAAW,CAACT,IAAI,CAACO,EAAE,IAAAb;4BAX7DgB,UAAA,I,cAW0CpB,IAAA,CAAAmB,WAAW,CAACT,IAAI,CAACO,EAAE,G,GAX7DI,gBAAA,CAWkE,KAEpD,G,gBAAAxB,mBAAA,CAAqD;MAA9CqB,IAAI,EAAC,MAAM;MAbhC,uBAAAd,MAAA,IAa0CJ,IAAA,CAAAsB,YAAY,CAACZ,IAAI,CAACO,EAAE,IAAAb;4BAb9DmB,UAAA,I,cAa0CvB,IAAA,CAAAsB,YAAY,CAACZ,IAAI,CAACO,EAAE,G,GAChDpB,mBAAA,CAA+D;MAA5DH,KAAK,EAAC,iBAAiB;MAAEQ,OAAK,EAAAE,MAAA,IAAEJ,IAAA,CAAAwB,aAAa,CAACd,IAAI,CAACO,EAAE;4BAdtEQ,UAAA,E,8CAgBY9B,mBAAA,CAaWY,SAAA;MA7BvBI,GAAA;IAAA,IAAAU,gBAAA,CAAAR,gBAAA,CAkBgBH,IAAI,CAACgB,eAAe,GAAqBhB,IAAI,CAACgB,eAAe,CAACC,KAAK,S,mBAGnE,KAEF,GAAAd,gBAAA,CACEH,IAAI,CAACkB,eAAe,GAAqBlB,IAAI,CAACkB,eAAe,CAACD,KAAK,S,mBAGnE,GACF,iBAAA9B,mBAAA,CAAgE;MAA7DH,KAAK,EAAC,iBAAiB;MAAEQ,OAAK,EAAAE,MAAA,IAAEJ,IAAA,CAAA6B,cAAc,CAACnB,IAAI,CAACO,EAAE;4BA5BvEa,UAAA,E;sEAKiC9B,IAAA,CAAAC,WAAW,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}
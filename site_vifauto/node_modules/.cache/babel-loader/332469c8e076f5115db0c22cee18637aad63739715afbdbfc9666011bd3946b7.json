{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"fournisseurtempsreponse\"\n};\nconst _hoisted_2 = {\n  class: \"notes\"\n};\nconst _hoisted_3 = {\n  class: \"critere\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"td\", null, [/*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"fa-solid fa-pen\"\n})], -1 /* HOISTED */);\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"table\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.critereNote, (value, key) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: key\n    }, [_createElementVNode(\"td\", _hoisted_3, _toDisplayString(_ctx.formatKey(key)), 1 /* TEXT */), _createElementVNode(\"td\", {\n      class: _normalizeClass([\"note\", _ctx.getNoteColor(value)])\n    }, _toDisplayString(value ? value + \"/20\" : \"Non renseigné\"), 3 /* TEXT, CLASS */), _hoisted_4]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_Fragment","_renderList","_ctx","critereNote","value","key","_hoisted_3","_toDisplayString","formatKey","_normalizeClass","getNoteColor","_hoisted_4"],"sources":["/Users/jelain/Desktop/Stage VifAuto/GIT/vifauto/site_vifauto/src/components/FournisseurTempsReponse.vue"],"sourcesContent":["<template>\n  <div class=\"fournisseurtempsreponse\">\n    <div class=\"notes\">\n      <table>\n        <tr v-for=\"(value, key) in critereNote\" :key=\"key\">\n          <td class=\"critere\">{{ formatKey(key) }}</td>\n          <td class=\"note\" :class=\"getNoteColor(value)\">\n            {{ value ? value + \"/20\" : \"Non renseigné\" }}\n          </td>\n          <td>\n            <i class=\"fa-solid fa-pen\"></i>\n          </td>\n        </tr>\n      </table>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return(){\n\n    }\n    editMode: {};\n  },\n  props: {\n    notes: Array,\n    getNoteColor: {\n      type: Function, // Assurez-vous de définir le type de prop correctement\n      required: true,\n    },\n  },\n  computed: {\n    critereNote() {\n      // Filtrer le tableau 'notes' pour exclure le premier et le dernier élément\n      const critereNote = {};\n      const keys = Object.keys(this.notes);\n      for (let i = 1; i < keys.length - 1; i++) {\n        critereNote[keys[i]] = this.notes[keys[i]];\n      }\n      return critereNote;\n    },\n  },\n  methods: {\n    formatKey(key) {\n      // Transformer la clé en remplaçant les underscores par des espaces et capitalisant chaque mot\n      return key.replace(/_/g, \" \").replace(/^\\w/, (c) => c.toUpperCase());\n    },\n    toggleEditMode(jourId) {\n      this.editMode[jourId] = !this.editMode[jourId];\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\n.notes {\n  display: flex;\n  justify-content: right;\n  .critere {\n    padding-right: 10px;\n  }\n}\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAyB;;EAC7BA,KAAK,EAAC;AAAO;;EAGRA,KAAK,EAAC;AAAS;gCAInBC,mBAAA,CAEK,a,aADHA,mBAAA,CAA+B;EAA5BD,KAAK,EAAC;AAAiB,G;;uBATpCE,mBAAA,CAcM,OAdNC,UAcM,GAbJF,mBAAA,CAYM,OAZNG,UAYM,GAXJH,mBAAA,CAUQ,iB,kBATNC,mBAAA,CAQKG,SAAA,QAZbC,WAAA,CAImCC,IAAA,CAAAC,WAAW,EAJ9C,CAIoBC,KAAK,EAAEC,GAAG;yBAAtBR,mBAAA,CAQK;MARoCQ,GAAG,EAAEA;IAAG,IAC/CT,mBAAA,CAA6C,MAA7CU,UAA6C,EAAAC,gBAAA,CAAtBL,IAAA,CAAAM,SAAS,CAACH,GAAG,mBACpCT,mBAAA,CAEK;MAFDD,KAAK,EANnBc,eAAA,EAMoB,MAAM,EAASP,IAAA,CAAAQ,YAAY,CAACN,KAAK;wBACtCA,KAAK,GAAGA,KAAK,mDAElBO,UAEK,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}
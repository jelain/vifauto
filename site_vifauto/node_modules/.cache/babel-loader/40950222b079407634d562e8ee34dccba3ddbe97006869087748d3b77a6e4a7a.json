{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      fournisseur: [],\n      horaires: [],\n      showHoraire: false,\n      showNote: false,\n      editMode: {},\n      // Nouvelle propriété pour gérer l'édition des horaires\n      newOuvertue: {},\n      // Nouvelle propriété\n      newFermeture: {} // Nouvelle propriété\n    };\n  },\n  mounted() {\n    this.fournisseurId = parseInt(this.$route.params.id);\n    // Appel de la fonction pour récupérer les informations du fournisseur lors du montage du composant\n    this.getFournisseur();\n    this.getHoraires();\n  },\n  methods: {\n    toggleHoraire() {\n      this.showHoraire = !this.showHoraire;\n      this.showNote = false;\n    },\n    toggleNote() {\n      this.showNote = !this.showNote;\n      this.showHoraire = false;\n    },\n    toggleEditMode(jourId) {\n      this.editMode[jourId] = !this.editMode[jourId];\n      // Initialiser la valeur éditée avec la valeur actuelle de l'horaire\n      console.log(this.newOuvertue);\n      console.log(this.newFermeture);\n    },\n    async saveEdit(jourId) {\n      try {\n        const response = await axios.put(`http://localhost:3000/api/horaires/${jourId}`, {\n          heureOuverture: this.newOuvertue[jourId],\n          heureFermeture: this.newFermeture[jourId]\n        });\n        console.log(response.data); // Si vous voulez afficher la réponse\n        // Mettre à jour l'affichage si nécessaire\n      } catch (error) {\n        console.error(\"Error updating horaire:\", error);\n      }\n    },\n    async getFournisseur() {\n      try {\n        const response = await axios.get(`http://localhost:3000/api/fournisseurs/id=${this.fournisseurId}`); // Remplacez l'URL par celle de votre API\n        this.fournisseur = response.data;\n      } catch (error) {\n        console.error(\"Error fetching fournisseur:\", error);\n      }\n    },\n    async getHoraires() {\n      try {\n        const response = await axios.get(`http://localhost:3000/api/horaires/id=${this.fournisseurId}`); // Remplacez l'URL par celle de votre API\n        this.horaires = response.data;\n        console.log(this.horaires);\n      } catch (error) {\n        console.error(\"Error fetching horaires:\", error);\n      }\n    }\n  },\n  watch: {\n    $route() {\n      this.fournisseurId = parseInt(this.$route.params.id);\n      this.getFournisseur();\n      this.getHoraires();\n    }\n  }\n};","map":{"version":3,"names":["axios","data","fournisseur","horaires","showHoraire","showNote","editMode","newOuvertue","newFermeture","mounted","fournisseurId","parseInt","$route","params","id","getFournisseur","getHoraires","methods","toggleHoraire","toggleNote","toggleEditMode","jourId","console","log","saveEdit","response","put","heureOuverture","heureFermeture","error","get","watch"],"sources":["/Users/jelain/Desktop/Stage VifAuto/GIT/vifauto/site_vifauto/src/components/FournisseurInfoBar.vue"],"sourcesContent":["<template>\n  <div class=\"info-bar\">\n    <div class=\"container\">\n      <div class=\"logo\">\n        <img\n          v-if=\"fournisseur.image_url\"\n          :src=\"`/fournisseur/${fournisseur.image_url}`\"\n          :alt=\"fournisseur.nom\"\n        />\n      </div>\n      <div class=\"info\">\n        <p :class=\"{ active: showHoraire }\" @click=\"toggleHoraire()\">\n          Horaires d'ouverture et de fermeture\n        </p>\n        <div class=\"horaire\" v-show=\"showHoraire\">\n          <table>\n            <tr v-for=\"jour in horaires\" :key=\"jour\">\n              <td class=\"jour\">{{ jour.jour_semaine }}</td>\n              <td class=\"heures\">\n                <template v-if=\"editMode[jour.id]\">\n                  <input type=\"time\" v-model=\"newOuvertue[jour.id]\" />\n                  -\n                  <input type=\"time\" v-model=\"newFermeture[jour.id]\" />\n                  <i\n                    class=\"fa-solid fa-pen\"\n                    @click=\"toggleEditMode(jour.id)\"\n                  ></i>\n                </template>\n                <template v-else>\n                  {{\n                    jour.heure_ouverture\n                      ? jour.heure_ouverture\n                      : \"Non renseigné\"\n                  }}\n                  -\n                  {{\n                    jour.heure_fermeture\n                      ? jour.heure_ouverture\n                      : \"Non renseigné\"\n                  }}\n                  <i\n                    class=\"fa-solid fa-pen\"\n                    @click=\"toggleEditMode(jour.id)\"\n                  ></i>\n                </template>\n              </td>\n            </tr>\n          </table>\n        </div>\n        <p :class=\"{ active: showNote }\" @click=\"toggleNote()\">\n          Temps de reponse : 20/20\n        </p>\n        <div class=\"note\" v-show=\"showNote\">\n          <table>\n            <tr>\n              <td class=\"critere\">Critère 1</td>\n              <td class=\"note\">20/20</td>\n            </tr>\n            <tr>\n              <td class=\"critere\">Critère 2</td>\n              <td class=\"note\">18/20</td>\n            </tr>\n            <tr>\n              <td class=\"critere\">Critère 3</td>\n              <td class=\"note\">15/20</td>\n            </tr>\n            <tr>\n              <td class=\"critere\">Critère 4</td>\n              <td class=\"note\">17/20</td>\n            </tr>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      fournisseur: [],\n      horaires: [],\n      showHoraire: false,\n      showNote: false,\n      editMode: {}, // Nouvelle propriété pour gérer l'édition des horaires\n      newOuvertue: {}, // Nouvelle propriété\n      newFermeture: {}, // Nouvelle propriété\n    };\n  },\n  mounted() {\n    this.fournisseurId = parseInt(this.$route.params.id);\n    // Appel de la fonction pour récupérer les informations du fournisseur lors du montage du composant\n    this.getFournisseur();\n    this.getHoraires();\n  },\n  methods: {\n    toggleHoraire() {\n      this.showHoraire = !this.showHoraire;\n      this.showNote = false;\n    },\n    toggleNote() {\n      this.showNote = !this.showNote;\n      this.showHoraire = false;\n    },\n\n    toggleEditMode(jourId) {\n      this.editMode[jourId] = !this.editMode[jourId];\n      // Initialiser la valeur éditée avec la valeur actuelle de l'horaire\n      console.log(this.newOuvertue);\n      console.log(this.newFermeture);\n    },\n\n    async saveEdit(jourId) {\n      try {\n        const response = await axios.put(\n          `http://localhost:3000/api/horaires/${jourId}`,\n          {\n            heureOuverture: this.newOuvertue[jourId],\n            heureFermeture: this.newFermeture[jourId],\n          }\n        );\n        console.log(response.data); // Si vous voulez afficher la réponse\n        // Mettre à jour l'affichage si nécessaire\n      } catch (error) {\n        console.error(\"Error updating horaire:\", error);\n      }\n    },\n\n    async getFournisseur() {\n      try {\n        const response = await axios.get(\n          `http://localhost:3000/api/fournisseurs/id=${this.fournisseurId}`\n        ); // Remplacez l'URL par celle de votre API\n        this.fournisseur = response.data;\n      } catch (error) {\n        console.error(\"Error fetching fournisseur:\", error);\n      }\n    },\n\n    async getHoraires() {\n      try {\n        const response = await axios.get(\n          `http://localhost:3000/api/horaires/id=${this.fournisseurId}`\n        ); // Remplacez l'URL par celle de votre API\n        this.horaires = response.data;\n        console.log(this.horaires);\n      } catch (error) {\n        console.error(\"Error fetching horaires:\", error);\n      }\n    },\n  },\n  watch: {\n    $route() {\n      this.fournisseurId = parseInt(this.$route.params.id);\n      this.getFournisseur();\n      this.getHoraires();\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\n.info-bar {\n  display: flex;\n  justify-content: center;\n  background-color: white;\n  width: 100%;\n  .container {\n    display: flex;\n    justify-content: space-between;\n    margin: 15px 0;\n    width: 57em;\n    .logo {\n      height: 60px;\n      display: flex;\n      align-items: center;\n      img {\n        max-width: 150px;\n        max-height: 50px;\n      }\n    }\n    .info {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      p {\n        text-align: right;\n        font-weight: 400;\n        margin: 3px;\n      }\n      p:hover {\n        cursor: pointer;\n      }\n      .active {\n        font-weight: 500;\n      }\n      .horaire {\n        display: flex;\n        justify-content: right;\n        .jour {\n          text-align: right;\n          padding-right: 10px;\n        }\n        .heures {\n          i {\n            margin-left: 8px;\n            font-size: 0.8rem;\n          }\n          i:hover {\n            cursor: pointer;\n          }\n        }\n      }\n      .note {\n        display: flex;\n        justify-content: right;\n        .critere {\n          padding-right: 10px;\n        }\n      }\n    }\n    .info > *:nth-child(3) {\n      margin-top: 10px;\n    }\n  }\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
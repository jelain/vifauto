{"ast":null,"code":"import FournisseurHoraire from \"./FournisseurHoraire.vue\";\nimport axios from \"axios\";\nexport default {\n  components: {\n    FournisseurHoraire\n  },\n  data() {\n    return {\n      fournisseur: [],\n      notes: {},\n      showNote: false\n    };\n  },\n  mounted() {\n    this.fournisseurId = parseInt(this.$route.params.id);\n    // Appel de la fonction pour récupérer les informations du fournisseur lors du montage du composant\n    this.getFournisseur();\n    this.getHoraires();\n    this.getNotes();\n  },\n  methods: {\n    toggleHoraire() {\n      this.showHoraire = !this.showHoraire;\n      this.showNote = false;\n    },\n    toggleNote() {\n      this.showNote = !this.showNote;\n      this.showHoraire = false;\n    },\n    saveAndToggle(jourId) {\n      this.saveEdit(jourId).then(() => {\n        // Mettre à jour localement les valeurs des horaires\n        const index = this.horaires.findIndex(jour => jour.id === jourId);\n        if (index !== -1) {\n          this.horaires[index].heure_ouverture = this.newOuvertue[jourId];\n          this.horaires[index].heure_fermeture = this.newFermeture[jourId];\n        }\n      }).finally(() => {\n        // Toggle edit mode après la sauvegarde\n        this.toggleEditMode(jourId);\n      });\n    },\n    toggleEditMode(jourId) {\n      this.editMode[jourId] = !this.editMode[jourId];\n      // Initialiser la valeur éditée avec la valeur actuelle de l'horaire\n      console.log(this.newOuvertue[jourId]);\n      console.log(this.newFermeture[jourId]);\n    },\n    async saveEdit(jourId) {\n      try {\n        const response = await axios.put(`http://localhost:3000/api/horaires/set/id=${jourId}`, {\n          heureOuverture: this.newOuvertue[jourId],\n          heureFermeture: this.newFermeture[jourId],\n          jourId: jourId,\n          fournisseurId: this.fournisseurId\n        });\n        console.log(response.data); // Si vous voulez afficher la réponse\n        // Mettre à jour l'affichage si nécessaire\n      } catch (error) {\n        console.error(\"Error updating horaire:\", error);\n      }\n    },\n    async getFournisseur() {\n      try {\n        const response = await axios.get(`http://localhost:3000/api/fournisseurs/id=${this.fournisseurId}`); // Remplacez l'URL par celle de votre API\n        this.fournisseur = response.data;\n      } catch (error) {\n        console.error(\"Error fetching fournisseur:\", error);\n      }\n    },\n    async getHoraires() {\n      try {\n        const response = await axios.get(`http://localhost:3000/api/horaires/id=${this.fournisseurId}`); // Remplacez l'URL par celle de votre API\n        this.horaires = response.data;\n      } catch (error) {\n        console.error(\"Error fetching horaires:\", error);\n      }\n    },\n    async getNotes() {\n      try {\n        const response = await axios.get(`http://localhost:3000/api/notes/id=${this.fournisseurId}`);\n        this.notes = response.data[0];\n        console.log(this.notes);\n      } catch (error) {\n        console.error(\"Error fetching notes:\", error);\n      }\n    }\n  },\n  watch: {\n    $route() {\n      this.fournisseurId = parseInt(this.$route.params.id);\n      this.getFournisseur();\n      this.getHoraires();\n      this.getNotes();\n    }\n  }\n};","map":{"version":3,"names":["FournisseurHoraire","axios","components","data","fournisseur","notes","showNote","mounted","fournisseurId","parseInt","$route","params","id","getFournisseur","getHoraires","getNotes","methods","toggleHoraire","showHoraire","toggleNote","saveAndToggle","jourId","saveEdit","then","index","horaires","findIndex","jour","heure_ouverture","newOuvertue","heure_fermeture","newFermeture","finally","toggleEditMode","editMode","console","log","response","put","heureOuverture","heureFermeture","error","get","watch"],"sources":["/Users/jelain/Desktop/Stage VifAuto/GIT/vifauto/site_vifauto/src/components/FournisseurInfoBar.vue"],"sourcesContent":["<template>\n  <div class=\"info-bar\">\n    <div class=\"container\">\n      <div class=\"logo\">\n        <img\n          v-if=\"fournisseur.image_url\"\n          :src=\"`/fournisseur/${fournisseur.image_url}`\"\n          :alt=\"fournisseur.nom\"\n        />\n      </div>\n      <div class=\"info\">\n        <FournisseurHoraire />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport FournisseurHoraire from \"./FournisseurHoraire.vue\";\nimport axios from \"axios\";\nexport default {\n  components: {\n    FournisseurHoraire,\n  },\n  data() {\n    return {\n      fournisseur: [],\n      notes: {},\n      showNote: false,\n    };\n  },\n  mounted() {\n    this.fournisseurId = parseInt(this.$route.params.id);\n    // Appel de la fonction pour récupérer les informations du fournisseur lors du montage du composant\n    this.getFournisseur();\n    this.getHoraires();\n    this.getNotes();\n  },\n  methods: {\n    toggleHoraire() {\n      this.showHoraire = !this.showHoraire;\n      this.showNote = false;\n    },\n    toggleNote() {\n      this.showNote = !this.showNote;\n      this.showHoraire = false;\n    },\n\n    saveAndToggle(jourId) {\n      this.saveEdit(jourId)\n        .then(() => {\n          // Mettre à jour localement les valeurs des horaires\n          const index = this.horaires.findIndex((jour) => jour.id === jourId);\n          if (index !== -1) {\n            this.horaires[index].heure_ouverture = this.newOuvertue[jourId];\n            this.horaires[index].heure_fermeture = this.newFermeture[jourId];\n          }\n        })\n        .finally(() => {\n          // Toggle edit mode après la sauvegarde\n          this.toggleEditMode(jourId);\n        });\n    },\n\n    toggleEditMode(jourId) {\n      this.editMode[jourId] = !this.editMode[jourId];\n      // Initialiser la valeur éditée avec la valeur actuelle de l'horaire\n      console.log(this.newOuvertue[jourId]);\n      console.log(this.newFermeture[jourId]);\n    },\n\n    async saveEdit(jourId) {\n      try {\n        const response = await axios.put(\n          `http://localhost:3000/api/horaires/set/id=${jourId}`,\n          {\n            heureOuverture: this.newOuvertue[jourId],\n            heureFermeture: this.newFermeture[jourId],\n            jourId: jourId,\n            fournisseurId: this.fournisseurId,\n          }\n        );\n\n        console.log(response.data); // Si vous voulez afficher la réponse\n        // Mettre à jour l'affichage si nécessaire\n      } catch (error) {\n        console.error(\"Error updating horaire:\", error);\n      }\n    },\n\n    async getFournisseur() {\n      try {\n        const response = await axios.get(\n          `http://localhost:3000/api/fournisseurs/id=${this.fournisseurId}`\n        ); // Remplacez l'URL par celle de votre API\n        this.fournisseur = response.data;\n      } catch (error) {\n        console.error(\"Error fetching fournisseur:\", error);\n      }\n    },\n\n    async getHoraires() {\n      try {\n        const response = await axios.get(\n          `http://localhost:3000/api/horaires/id=${this.fournisseurId}`\n        ); // Remplacez l'URL par celle de votre API\n        this.horaires = response.data;\n      } catch (error) {\n        console.error(\"Error fetching horaires:\", error);\n      }\n    },\n\n    async getNotes() {\n      try {\n        const response = await axios.get(\n          `http://localhost:3000/api/notes/id=${this.fournisseurId}`\n        );\n        this.notes = response.data[0];\n        console.log(this.notes);\n      } catch (error) {\n        console.error(\"Error fetching notes:\", error);\n      }\n    },\n  },\n  watch: {\n    $route() {\n      this.fournisseurId = parseInt(this.$route.params.id);\n      this.getFournisseur();\n      this.getHoraires();\n      this.getNotes();\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\n.info-bar {\n  display: flex;\n  justify-content: center;\n  background-color: white;\n  width: 100%;\n  .container {\n    display: flex;\n    justify-content: space-between;\n    margin: 15px 0;\n    width: 57em;\n    .logo {\n      height: 60px;\n      display: flex;\n      align-items: center;\n      img {\n        max-width: 150px;\n        max-height: 50px;\n      }\n    }\n    .info {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      p {\n        text-align: right;\n        font-weight: 400;\n        margin: 3px;\n      }\n      p:hover {\n        cursor: pointer;\n      }\n      .active {\n        font-weight: 500;\n      }\n      .horaire {\n        display: flex;\n        justify-content: right;\n        .jour {\n          text-align: right;\n          padding-right: 10px;\n        }\n      }\n\n      .heures,\n      .note {\n        i {\n          margin-left: 8px;\n          font-size: 0.8rem;\n        }\n        i:hover {\n          cursor: pointer;\n        }\n      }\n      .note {\n        display: flex;\n        justify-content: right;\n        .critere {\n          padding-right: 10px;\n        }\n      }\n    }\n    .info > *:nth-child(3) {\n      margin-top: 10px;\n    }\n  }\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
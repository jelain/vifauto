{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      fournisseur: [],\n      horaires: [],\n      notes: {},\n      showHoraire: false,\n      showNote: false,\n      editMode: {},\n      // Nouvelle propriété pour gérer l'édition des horaires\n      newOuvertue: {},\n      // Nouvelle propriété\n      newFermeture: {},\n      newTempsReponse: {},\n      editModeTempsReponse: {}\n    };\n  },\n  mounted() {\n    this.fournisseurId = parseInt(this.$route.params.id);\n    // Appel de la fonction pour récupérer les informations du fournisseur lors du montage du composant\n    this.getFournisseur();\n    this.getHoraires();\n    this.getNotes();\n  },\n  methods: {\n    toggleHoraire() {\n      this.showHoraire = !this.showHoraire;\n      this.showNote = false;\n    },\n    toggleNote() {\n      this.showNote = !this.showNote;\n      this.showHoraire = false;\n    },\n    saveAndToggle(jourId) {\n      this.saveEdit(jourId).then(() => {\n        // Mettre à jour localement les valeurs des horaires\n        const index = this.horaires.findIndex(jour => jour.id === jourId);\n        if (index !== -1) {\n          this.horaires[index].heure_ouverture = this.newOuvertue[jourId];\n          this.horaires[index].heure_fermeture = this.newFermeture[jourId];\n        }\n      }).finally(() => {\n        // Toggle edit mode après la sauvegarde\n        this.toggleEditMode(jourId);\n      });\n    },\n    toggleEditMode(jourId) {\n      this.editMode[jourId] = !this.editMode[jourId];\n      // Initialiser la valeur éditée avec la valeur actuelle de l'horaire\n      console.log(this.newOuvertue[jourId]);\n      console.log(this.newFermeture[jourId]);\n    },\n    async saveEdit(jourId) {\n      try {\n        const response = await axios.put(`http://localhost:3000/api/horaires/set/id=${jourId}`, {\n          heureOuverture: this.newOuvertue[jourId],\n          heureFermeture: this.newFermeture[jourId],\n          jourId: jourId,\n          fournisseurId: this.fournisseurId\n        });\n        console.log(response.data); // Si vous voulez afficher la réponse\n        // Mettre à jour l'affichage si nécessaire\n      } catch (error) {\n        console.error(\"Error updating horaire:\", error);\n      }\n    },\n    async getFournisseur() {\n      try {\n        const response = await axios.get(`http://localhost:3000/api/fournisseurs/id=${this.fournisseurId}`); // Remplacez l'URL par celle de votre API\n        this.fournisseur = response.data;\n      } catch (error) {\n        console.error(\"Error fetching fournisseur:\", error);\n      }\n    },\n    async getHoraires() {\n      try {\n        const response = await axios.get(`http://localhost:3000/api/horaires/id=${this.fournisseurId}`); // Remplacez l'URL par celle de votre API\n        this.horaires = response.data;\n      } catch (error) {\n        console.error(\"Error fetching horaires:\", error);\n      }\n    },\n    async getNotes() {\n      try {\n        const response = await axios.get(`http://localhost:3000/api/notes/id=${this.fournisseurId}`);\n        this.notes = response.data[0];\n        console.log(this.notes);\n      } catch (error) {\n        console.error(\"Error fetching notes:\", error);\n      }\n    }\n  },\n  watch: {\n    $route() {\n      this.fournisseurId = parseInt(this.$route.params.id);\n      this.getFournisseur();\n      this.getHoraires();\n      this.getNotes();\n    }\n  }\n};","map":{"version":3,"names":["axios","data","fournisseur","horaires","notes","showHoraire","showNote","editMode","newOuvertue","newFermeture","newTempsReponse","editModeTempsReponse","mounted","fournisseurId","parseInt","$route","params","id","getFournisseur","getHoraires","getNotes","methods","toggleHoraire","toggleNote","saveAndToggle","jourId","saveEdit","then","index","findIndex","jour","heure_ouverture","heure_fermeture","finally","toggleEditMode","console","log","response","put","heureOuverture","heureFermeture","error","get","watch"],"sources":["/Users/jelain/Desktop/Stage VifAuto/GIT/vifauto/site_vifauto/src/components/FournisseurInfoBar.vue"],"sourcesContent":["<template>\n  <div class=\"info-bar\">\n    <div class=\"container\">\n      <div class=\"logo\">\n        <img\n          v-if=\"fournisseur.image_url\"\n          :src=\"`/fournisseur/${fournisseur.image_url}`\"\n          :alt=\"fournisseur.nom\"\n        />\n      </div>\n      <div class=\"info\">\n        <p :class=\"{ active: showHoraire }\" @click=\"toggleHoraire()\">\n          Horaires d'ouverture et de fermeture\n        </p>\n        <div class=\"horaire\" v-show=\"showHoraire\">\n          <table>\n            <tr v-for=\"jour in horaires\" :key=\"jour\">\n              <td class=\"jour\">{{ jour.jour_semaine }}</td>\n              <td class=\"heures\">\n                <template v-if=\"editMode[jour.id]\">\n                  <input type=\"time\" v-model=\"newOuvertue[jour.id]\" />\n                  -\n                  <input type=\"time\" v-model=\"newFermeture[jour.id]\" />\n                  <i\n                    class=\"fa-solid fa-pen\"\n                    @click=\"saveAndToggle(jour.id)\"\n                  ></i>\n                </template>\n                <template v-else>\n                  {{\n                    jour.heure_ouverture\n                      ? jour.heure_ouverture.slice(0, 5)\n                      : \"Non renseigné\"\n                  }}\n                  -\n                  {{\n                    jour.heure_fermeture\n                      ? jour.heure_fermeture.slice(0, 5)\n                      : \"Non renseigné\"\n                  }}\n                  <i\n                    class=\"fa-solid fa-pen\"\n                    @click=\"toggleEditMode(jour.id)\"\n                  ></i>\n                </template>\n              </td>\n            </tr>\n          </table>\n        </div>\n        <p :class=\"{ active: showNote }\" @click=\"toggleNote()\">\n          Temps de reponse :\n          {{ notes.moyenne ? notes.moyenne + \"/20\" : \"Non renseigné\" }}\n        </p>\n        <div class=\"note\" v-show=\"showNote\">\n          <table>\n            <tr>\n              <td class=\"critere\">Accueil comptoir</td>\n              <td class=\"note\">\n                {{\n                  notes.accueil_comptoir\n                    ? notes.accueil_comptoir + \"/20\"\n                    : \"Non renseigné\"\n                }}\n              </td>\n              <td>\n                <i class=\"fa-solid fa-pen\"></i>\n              </td>\n            </tr>\n            <tr>\n              <td class=\"critere\">Temps de service</td>\n              <td class=\"note\">\n                {{\n                  notes.temps_service\n                    ? notes.temps_service + \"/20\"\n                    : \"Non renseigné\"\n                }}\n              </td>\n              <td>\n                <i class=\"fa-solid fa-pen\"></i>\n              </td>\n            </tr>\n            <tr>\n              <td class=\"critere\">Rapidité pièce comptoir</td>\n              <td class=\"note\">\n                {{\n                  notes.rapidite_piece_comptoir\n                    ? notes.rapidite_piece_comptoir + \"/20\"\n                    : \"Non renseigné\"\n                }}\n              </td>\n              <td>\n                <i class=\"fa-solid fa-pen\"></i>\n              </td>\n            </tr>\n            <tr>\n              <td class=\"critere\">Accueil téléphonique</td>\n              <td class=\"note\">\n                {{\n                  notes.accueil_telephonique\n                    ? notes.accueil_telephonique + \"/20\"\n                    : \"Non renseigné\"\n                }}\n              </td>\n              <td>\n                <i class=\"fa-solid fa-pen\"></i>\n              </td>\n            </tr>\n            <tr>\n              <td class=\"critere\">Commercial</td>\n              <td class=\"note\">\n                {{\n                  notes.commercial ? notes.commercial + \"/20\" : \"Non renseigné\"\n                }}\n              </td>\n              <td>\n                <i class=\"fa-solid fa-pen\"></i>\n              </td>\n            </tr>\n            <tr>\n              <td class=\"critere\">Gestion des retours</td>\n              <td class=\"note\">\n                {{\n                  notes.gestion_retour\n                    ? notes.gestion_retour + \"/20\"\n                    : \"Non renseigné\"\n                }}\n              </td>\n              <td>\n                <i class=\"fa-solid fa-pen\"></i>\n              </td>\n            </tr>\n            <tr>\n              <td class=\"critere\">Gestion garantie</td>\n              <td class=\"note\">\n                {{\n                  notes.gestion_garantie\n                    ? notes.gestion_garantie + \"/20\"\n                    : \"Non renseigné\"\n                }}\n              </td>\n              <td>\n                <i class=\"fa-solid fa-pen\"></i>\n              </td>\n            </tr>\n            <tr>\n              <td class=\"critere\">Politique interne</td>\n              <td class=\"note\">\n                {{\n                  notes.politique_interne\n                    ? notes.politique_interne + \"/20\"\n                    : \"Non renseigné\"\n                }}\n              </td>\n              <td>\n                <i class=\"fa-solid fa-pen\"></i>\n              </td>\n            </tr>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      fournisseur: [],\n      horaires: [],\n      notes: {},\n      showHoraire: false,\n      showNote: false,\n      editMode: {}, // Nouvelle propriété pour gérer l'édition des horaires\n      newOuvertue: {}, // Nouvelle propriété\n      newFermeture: {},\n      newTempsReponse: {},\n      editModeTempsReponse: {},\n    };\n  },\n  mounted() {\n    this.fournisseurId = parseInt(this.$route.params.id);\n    // Appel de la fonction pour récupérer les informations du fournisseur lors du montage du composant\n    this.getFournisseur();\n    this.getHoraires();\n    this.getNotes();\n  },\n  methods: {\n    toggleHoraire() {\n      this.showHoraire = !this.showHoraire;\n      this.showNote = false;\n    },\n    toggleNote() {\n      this.showNote = !this.showNote;\n      this.showHoraire = false;\n    },\n\n    saveAndToggle(jourId) {\n      this.saveEdit(jourId)\n        .then(() => {\n          // Mettre à jour localement les valeurs des horaires\n          const index = this.horaires.findIndex((jour) => jour.id === jourId);\n          if (index !== -1) {\n            this.horaires[index].heure_ouverture = this.newOuvertue[jourId];\n            this.horaires[index].heure_fermeture = this.newFermeture[jourId];\n          }\n        })\n        .finally(() => {\n          // Toggle edit mode après la sauvegarde\n          this.toggleEditMode(jourId);\n        });\n    },\n\n    toggleEditMode(jourId) {\n      this.editMode[jourId] = !this.editMode[jourId];\n      // Initialiser la valeur éditée avec la valeur actuelle de l'horaire\n      console.log(this.newOuvertue[jourId]);\n      console.log(this.newFermeture[jourId]);\n    },\n\n    async saveEdit(jourId) {\n      try {\n        const response = await axios.put(\n          `http://localhost:3000/api/horaires/set/id=${jourId}`,\n          {\n            heureOuverture: this.newOuvertue[jourId],\n            heureFermeture: this.newFermeture[jourId],\n            jourId: jourId,\n            fournisseurId: this.fournisseurId,\n          }\n        );\n\n        console.log(response.data); // Si vous voulez afficher la réponse\n        // Mettre à jour l'affichage si nécessaire\n      } catch (error) {\n        console.error(\"Error updating horaire:\", error);\n      }\n    },\n\n    async getFournisseur() {\n      try {\n        const response = await axios.get(\n          `http://localhost:3000/api/fournisseurs/id=${this.fournisseurId}`\n        ); // Remplacez l'URL par celle de votre API\n        this.fournisseur = response.data;\n      } catch (error) {\n        console.error(\"Error fetching fournisseur:\", error);\n      }\n    },\n\n    async getHoraires() {\n      try {\n        const response = await axios.get(\n          `http://localhost:3000/api/horaires/id=${this.fournisseurId}`\n        ); // Remplacez l'URL par celle de votre API\n        this.horaires = response.data;\n      } catch (error) {\n        console.error(\"Error fetching horaires:\", error);\n      }\n    },\n\n    async getNotes() {\n      try {\n        const response = await axios.get(\n          `http://localhost:3000/api/notes/id=${this.fournisseurId}`\n        );\n        this.notes = response.data[0];\n        console.log(this.notes);\n      } catch (error) {\n        console.error(\"Error fetching notes:\", error);\n      }\n    },\n  },\n  watch: {\n    $route() {\n      this.fournisseurId = parseInt(this.$route.params.id);\n      this.getFournisseur();\n      this.getHoraires();\n      this.getNotes();\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\n.info-bar {\n  display: flex;\n  justify-content: center;\n  background-color: white;\n  width: 100%;\n  .container {\n    display: flex;\n    justify-content: space-between;\n    margin: 15px 0;\n    width: 57em;\n    .logo {\n      height: 60px;\n      display: flex;\n      align-items: center;\n      img {\n        max-width: 150px;\n        max-height: 50px;\n      }\n    }\n    .info {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      p {\n        text-align: right;\n        font-weight: 400;\n        margin: 3px;\n      }\n      p:hover {\n        cursor: pointer;\n      }\n      .active {\n        font-weight: 500;\n      }\n      .horaire {\n        display: flex;\n        justify-content: right;\n        .jour {\n          text-align: right;\n          padding-right: 10px;\n        }\n      }\n\n      .heures,\n      .note {\n        i {\n          margin-left: 8px;\n          font-size: 0.8rem;\n        }\n        i:hover {\n          cursor: pointer;\n        }\n      }\n      .note {\n        display: flex;\n        justify-content: right;\n        .critere {\n          padding-right: 10px;\n        }\n      }\n    }\n    .info > *:nth-child(3) {\n      margin-top: 10px;\n    }\n  }\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
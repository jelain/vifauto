{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      fournisseur: [],\n      horaires: [],\n      showHoraire: false,\n      showNote: false,\n      editMode: {},\n      // Utilisé pour suivre les modes d'édition pour chaque jour\n      editedHours: {},\n      // Utilisé pour stocker les heures éditées\n      nonRenseigne: \"Non renseigné\"\n    };\n  },\n  mounted() {\n    this.fournisseurId = parseInt(this.$route.params.id);\n    // Appel de la fonction pour récupérer les informations du fournisseur lors du montage du composant\n    this.getFournisseur();\n    this.getHoraires();\n  },\n  methods: {\n    toggleHoraire() {\n      this.showHoraire = !this.showHoraire;\n      this.showNote = false;\n    },\n    toggleNote() {\n      this.showNote = !this.showNote;\n      this.showHoraire = false;\n    },\n    async getFournisseur() {\n      try {\n        const response = await axios.get(`http://localhost:3000/api/fournisseurs/id=${this.fournisseurId}`); // Remplacez l'URL par celle de votre API\n        this.fournisseur = response.data;\n      } catch (error) {\n        console.error(\"Error fetching fournisseur:\", error);\n      }\n    },\n    async getHoraires() {\n      try {\n        const response = await axios.get(`http://localhost:3000/api/horaires/id=${this.fournisseurId}`); // Remplacez l'URL par celle de votre API\n        this.horaires = response.data;\n        console.log(this.horaires);\n      } catch (error) {\n        console.error(\"Error fetching horaires:\", error);\n      }\n    },\n    displayHours(jour) {\n      return jour.heure_ouverture ? jour.heure_ouverture : this.nonRenseigne;\n    },\n    toggleEditMode(jourId) {\n      this.$set(this.editMode, jourId, true);\n      this.$set(this.editedHours, jourId, this.horaires.find(jour => jour.id === jourId).heure_ouverture || \"\");\n    },\n    saveHours(jourId) {\n      // Enregistrez la valeur éditée ici\n      this.editMode[jourId] = false;\n    }\n  },\n  watch: {\n    $route() {\n      this.fournisseurId = parseInt(this.$route.params.id);\n      this.getFournisseur();\n      this.getHoraires();\n    }\n  }\n};","map":{"version":3,"names":["axios","data","fournisseur","horaires","showHoraire","showNote","editMode","editedHours","nonRenseigne","mounted","fournisseurId","parseInt","$route","params","id","getFournisseur","getHoraires","methods","toggleHoraire","toggleNote","response","get","error","console","log","displayHours","jour","heure_ouverture","toggleEditMode","jourId","$set","find","saveHours","watch"],"sources":["/Users/jelain/Desktop/Stage VifAuto/GIT/vifauto/site_vifauto/src/components/FournisseurInfoBar.vue"],"sourcesContent":["<template>\n  <div class=\"info-bar\">\n    <div class=\"container\">\n      <div class=\"logo\">\n        <img\n          v-if=\"fournisseur.image_url\"\n          :src=\"`/fournisseur/${fournisseur.image_url}`\"\n          :alt=\"fournisseur.nom\"\n        />\n      </div>\n      <div class=\"info\">\n        <p :class=\"{ active: showHoraire }\" @click=\"toggleHoraire()\">\n          Horaires d'ouverture et de fermeture\n        </p>\n        <div class=\"horaire\" v-show=\"showHoraire\">\n          <table>\n            <tr v-for=\"jour in horaires\" :key=\"jour\">\n              <td class=\"jour\">{{ jour.jour_semaine }}</td>\n              <td class=\"heures\">\n                <div v-if=\"!editMode[jour.id]\">\n                  <span @click=\"toggleEditMode(jour.id)\">{{\n                    displayHours(jour)\n                  }}</span>\n                  <i\n                    class=\"fa-solid fa-pen\"\n                    @click=\"toggleEditMode(jour.id)\"\n                  ></i>\n                </div>\n                <div v-else>\n                  <input\n                    v-model=\"editedHours[jour.id]\"\n                    @blur=\"saveHours(jour.id)\"\n                    @keydown.enter=\"saveHours(jour.id)\"\n                  />\n                </div>\n              </td>\n            </tr>\n          </table>\n        </div>\n        <p :class=\"{ active: showNote }\" @click=\"toggleNote()\">\n          Temps de reponse : 20/20\n        </p>\n        <div class=\"note\" v-show=\"showNote\">\n          <table>\n            <tr>\n              <td class=\"critere\">Critère 1</td>\n              <td class=\"note\">20/20</td>\n            </tr>\n            <tr>\n              <td class=\"critere\">Critère 2</td>\n              <td class=\"note\">18/20</td>\n            </tr>\n            <tr>\n              <td class=\"critere\">Critère 3</td>\n              <td class=\"note\">15/20</td>\n            </tr>\n            <tr>\n              <td class=\"critere\">Critère 4</td>\n              <td class=\"note\">17/20</td>\n            </tr>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      fournisseur: [],\n      horaires: [],\n      showHoraire: false,\n      showNote: false,\n      editMode: {}, // Utilisé pour suivre les modes d'édition pour chaque jour\n      editedHours: {}, // Utilisé pour stocker les heures éditées\n      nonRenseigne: \"Non renseigné\",\n    };\n  },\n  mounted() {\n    this.fournisseurId = parseInt(this.$route.params.id);\n    // Appel de la fonction pour récupérer les informations du fournisseur lors du montage du composant\n    this.getFournisseur();\n    this.getHoraires();\n  },\n  methods: {\n    toggleHoraire() {\n      this.showHoraire = !this.showHoraire;\n      this.showNote = false;\n    },\n    toggleNote() {\n      this.showNote = !this.showNote;\n      this.showHoraire = false;\n    },\n\n    async getFournisseur() {\n      try {\n        const response = await axios.get(\n          `http://localhost:3000/api/fournisseurs/id=${this.fournisseurId}`\n        ); // Remplacez l'URL par celle de votre API\n        this.fournisseur = response.data;\n      } catch (error) {\n        console.error(\"Error fetching fournisseur:\", error);\n      }\n    },\n\n    async getHoraires() {\n      try {\n        const response = await axios.get(\n          `http://localhost:3000/api/horaires/id=${this.fournisseurId}`\n        ); // Remplacez l'URL par celle de votre API\n        this.horaires = response.data;\n        console.log(this.horaires);\n      } catch (error) {\n        console.error(\"Error fetching horaires:\", error);\n      }\n    },\n\n    displayHours(jour) {\n      return jour.heure_ouverture ? jour.heure_ouverture : this.nonRenseigne;\n    },\n\n    toggleEditMode(jourId) {\n      this.$set(this.editMode, jourId, true);\n      this.$set(\n        this.editedHours,\n        jourId,\n        this.horaires.find((jour) => jour.id === jourId).heure_ouverture || \"\"\n      );\n    },\n\n    saveHours(jourId) {\n      // Enregistrez la valeur éditée ici\n      this.editMode[jourId] = false;\n    },\n  },\n  watch: {\n    $route() {\n      this.fournisseurId = parseInt(this.$route.params.id);\n      this.getFournisseur();\n      this.getHoraires();\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\n.info-bar {\n  display: flex;\n  justify-content: center;\n  background-color: white;\n  width: 100%;\n  .container {\n    display: flex;\n    justify-content: space-between;\n    margin: 15px 0;\n    width: 57em;\n    .logo {\n      height: 60px;\n      display: flex;\n      align-items: center;\n      img {\n        max-width: 150px;\n        max-height: 50px;\n      }\n    }\n    .info {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      p {\n        text-align: right;\n        font-weight: 400;\n        margin: 3px;\n      }\n      p:hover {\n        cursor: pointer;\n      }\n      .active {\n        font-weight: 500;\n      }\n      .horaire {\n        display: flex;\n        justify-content: right;\n        .jour {\n          text-align: right;\n          padding-right: 10px;\n        }\n        .heures {\n          i {\n            margin-left: 8px;\n            font-size: 0.8rem;\n          }\n          i:hover {\n            cursor: pointer;\n          }\n        }\n      }\n      .note {\n        display: flex;\n        justify-content: right;\n        .critere {\n          padding-right: 10px;\n        }\n      }\n    }\n    .info > *:nth-child(3) {\n      margin-top: 10px;\n    }\n  }\n}\n</style>\n"],"mappings":"AAoEA,OAAOA,KAAI,MAAO,OAAO;AACzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,EAAE;MACfC,QAAQ,EAAE,EAAE;MACZC,WAAW,EAAE,KAAK;MAClBC,QAAQ,EAAE,KAAK;MACfC,QAAQ,EAAE,CAAC,CAAC;MAAE;MACdC,WAAW,EAAE,CAAC,CAAC;MAAE;MACjBC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,aAAY,GAAIC,QAAQ,CAAC,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAE,CAAC;IACpD;IACA,IAAI,CAACC,cAAc,CAAC,CAAC;IACrB,IAAI,CAACC,WAAW,CAAC,CAAC;EACpB,CAAC;EACDC,OAAO,EAAE;IACPC,aAAaA,CAAA,EAAG;MACd,IAAI,CAACd,WAAU,GAAI,CAAC,IAAI,CAACA,WAAW;MACpC,IAAI,CAACC,QAAO,GAAI,KAAK;IACvB,CAAC;IACDc,UAAUA,CAAA,EAAG;MACX,IAAI,CAACd,QAAO,GAAI,CAAC,IAAI,CAACA,QAAQ;MAC9B,IAAI,CAACD,WAAU,GAAI,KAAK;IAC1B,CAAC;IAED,MAAMW,cAAcA,CAAA,EAAG;MACrB,IAAI;QACF,MAAMK,QAAO,GAAI,MAAMpB,KAAK,CAACqB,GAAG,CAC7B,6CAA4C,IAAI,CAACX,aAAc,EAClE,CAAC,EAAE;QACH,IAAI,CAACR,WAAU,GAAIkB,QAAQ,CAACnB,IAAI;MAClC,EAAE,OAAOqB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF,CAAC;IAED,MAAMN,WAAWA,CAAA,EAAG;MAClB,IAAI;QACF,MAAMI,QAAO,GAAI,MAAMpB,KAAK,CAACqB,GAAG,CAC7B,yCAAwC,IAAI,CAACX,aAAc,EAC9D,CAAC,EAAE;QACH,IAAI,CAACP,QAAO,GAAIiB,QAAQ,CAACnB,IAAI;QAC7BsB,OAAO,CAACC,GAAG,CAAC,IAAI,CAACrB,QAAQ,CAAC;MAC5B,EAAE,OAAOmB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IAEDG,YAAYA,CAACC,IAAI,EAAE;MACjB,OAAOA,IAAI,CAACC,eAAc,GAAID,IAAI,CAACC,eAAc,GAAI,IAAI,CAACnB,YAAY;IACxE,CAAC;IAEDoB,cAAcA,CAACC,MAAM,EAAE;MACrB,IAAI,CAACC,IAAI,CAAC,IAAI,CAACxB,QAAQ,EAAEuB,MAAM,EAAE,IAAI,CAAC;MACtC,IAAI,CAACC,IAAI,CACP,IAAI,CAACvB,WAAW,EAChBsB,MAAM,EACN,IAAI,CAAC1B,QAAQ,CAAC4B,IAAI,CAAEL,IAAI,IAAKA,IAAI,CAACZ,EAAC,KAAMe,MAAM,CAAC,CAACF,eAAc,IAAK,EACtE,CAAC;IACH,CAAC;IAEDK,SAASA,CAACH,MAAM,EAAE;MAChB;MACA,IAAI,CAACvB,QAAQ,CAACuB,MAAM,IAAI,KAAK;IAC/B;EACF,CAAC;EACDI,KAAK,EAAE;IACLrB,MAAMA,CAAA,EAAG;MACP,IAAI,CAACF,aAAY,GAAIC,QAAQ,CAAC,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAE,CAAC;MACpD,IAAI,CAACC,cAAc,CAAC,CAAC;MACrB,IAAI,CAACC,WAAW,CAAC,CAAC;IACpB;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
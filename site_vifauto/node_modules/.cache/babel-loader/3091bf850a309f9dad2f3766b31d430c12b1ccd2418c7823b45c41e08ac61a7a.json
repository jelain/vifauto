{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      editMode: {},\n      // Nouvelle propriété pour gérer l'édition des horaires\n      newOuvertue: {},\n      // Nouvelle propriété\n      newFermeture: {},\n      localHoraires: [],\n      MessageFermé: \"\"\n    };\n  },\n  props: {\n    horaires: Array\n  },\n  mounted() {\n    this.fournisseurId = parseInt(this.$route.params.id);\n  },\n  methods: {\n    saveAndToggle(jourId) {\n      this.localHoraires = this.horaires;\n      this.saveEdit(jourId).then(() => {\n        if (this.newOuvertue[jourId] === \"00:00:00\" && this.newFermeture[jourId] === \"00:00:00\") {} else {\n          // Mettre à jour localement les valeurs des horaires\n          const index = this.localHoraires.findIndex(jour => jour.id === jourId);\n          if (index !== -1) {\n            this.localHoraires[index].heure_ouverture = this.newOuvertue[jourId];\n            this.localHoraires[index].heure_fermeture = this.newFermeture[jourId];\n          }\n        }\n      }).finally(() => {\n        // Toggle edit mode après la sauvegarde\n        this.toggleEditMode(jourId);\n      });\n    },\n    toggleEditMode(jourId) {\n      this.editMode[jourId] = !this.editMode[jourId];\n    },\n    async saveEdit(jourId) {\n      try {\n        await axios.put(`http://localhost:3000/api/horaires/set/id=${jourId}`, {\n          heureOuverture: this.newOuvertue[jourId],\n          heureFermeture: this.newFermeture[jourId],\n          jourId: jourId,\n          fournisseurId: this.fournisseurId\n        });\n      } catch (error) {\n        console.error(\"Error updating horaire:\", error);\n      }\n    }\n  },\n  watch: {\n    $route() {\n      this.fournisseurId = parseInt(this.$route.params.id);\n    }\n  }\n};","map":{"version":3,"names":["axios","data","editMode","newOuvertue","newFermeture","localHoraires","MessageFermé","props","horaires","Array","mounted","fournisseurId","parseInt","$route","params","id","methods","saveAndToggle","jourId","saveEdit","then","index","findIndex","jour","heure_ouverture","heure_fermeture","finally","toggleEditMode","put","heureOuverture","heureFermeture","error","console","watch"],"sources":["/Users/jelain/Desktop/Stage VifAuto/GIT/vifauto/site_vifauto/src/components/FournisseurHoraire.vue"],"sourcesContent":["<template>\n  <div class=\"fournisseurhoraire\">\n    <div class=\"horaire\">\n      <table>\n        <tr v-for=\"jour in horaires\" :key=\"jour\">\n          <td class=\"jour\">{{ jour.jour_semaine }}</td>\n          <td class=\"heures\">\n            <template v-if=\"editMode[jour.id]\">\n              <input type=\"time\" v-model=\"newOuvertue[jour.id]\" />\n              -\n              <input type=\"time\" v-model=\"newFermeture[jour.id]\" />\n              <i class=\"fa-solid fa-pen\" @click=\"saveAndToggle(jour.id)\"></i>\n            </template>\n            <template v-else>\n              {{\n                jour.heure_ouverture == \"00:00:00\" &&\n                jour.heure_fermeture == \"00:00:00\"\n                  ? \"Fermer\"\n                  : (jour.heure_ouverture\n                      ? jour.heure_ouverture.slice(0, 5)\n                      : \"Non renseigné\") +\n                    \" - \" +\n                    (jour.heure_fermeture\n                      ? jour.heure_fermeture.slice(0, 5)\n                      : \"Non renseigné\")\n              }}\n              <i class=\"fa-solid fa-pen\" @click=\"toggleEditMode(jour.id)\"></i>\n            </template>\n          </td>\n        </tr>\n      </table>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      editMode: {}, // Nouvelle propriété pour gérer l'édition des horaires\n      newOuvertue: {}, // Nouvelle propriété\n      newFermeture: {},\n      localHoraires: [],\n      MessageFermé: \"\",\n    };\n  },\n  props: {\n    horaires: Array,\n  },\n  mounted() {\n    this.fournisseurId = parseInt(this.$route.params.id);\n  },\n  methods: {\n    saveAndToggle(jourId) {\n      this.localHoraires = this.horaires;\n      this.saveEdit(jourId)\n        .then(() => {\n          if (\n            this.newOuvertue[jourId] === \"00:00:00\" &&\n            this.newFermeture[jourId] === \"00:00:00\"\n          ) {\n          } else {\n            // Mettre à jour localement les valeurs des horaires\n            const index = this.localHoraires.findIndex(\n              (jour) => jour.id === jourId\n            );\n            if (index !== -1) {\n              this.localHoraires[index].heure_ouverture =\n                this.newOuvertue[jourId];\n              this.localHoraires[index].heure_fermeture =\n                this.newFermeture[jourId];\n            }\n          }\n        })\n        .finally(() => {\n          // Toggle edit mode après la sauvegarde\n          this.toggleEditMode(jourId);\n        });\n    },\n\n    toggleEditMode(jourId) {\n      this.editMode[jourId] = !this.editMode[jourId];\n    },\n\n    async saveEdit(jourId) {\n      try {\n        await axios.put(`http://localhost:3000/api/horaires/set/id=${jourId}`, {\n          heureOuverture: this.newOuvertue[jourId],\n          heureFermeture: this.newFermeture[jourId],\n          jourId: jourId,\n          fournisseurId: this.fournisseurId,\n        });\n      } catch (error) {\n        console.error(\"Error updating horaire:\", error);\n      }\n    },\n  },\n\n  watch: {\n    $route() {\n      this.fournisseurId = parseInt(this.$route.params.id);\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\n.fournisseurhoraire {\n  .horaire {\n    display: flex;\n    justify-content: right;\n    .jour {\n      text-align: right;\n      padding-right: 10px;\n    }\n  }\n}\n</style>\n"],"mappings":"AAoCA,OAAOA,KAAI,MAAO,OAAO;AACzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,CAAC,CAAC;MAAE;MACdC,WAAW,EAAE,CAAC,CAAC;MAAE;MACjBC,YAAY,EAAE,CAAC,CAAC;MAChBC,aAAa,EAAE,EAAE;MACjBC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,KAAK,EAAE;IACLC,QAAQ,EAAEC;EACZ,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,aAAY,GAAIC,QAAQ,CAAC,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAE,CAAC;EACtD,CAAC;EACDC,OAAO,EAAE;IACPC,aAAaA,CAACC,MAAM,EAAE;MACpB,IAAI,CAACb,aAAY,GAAI,IAAI,CAACG,QAAQ;MAClC,IAAI,CAACW,QAAQ,CAACD,MAAM,EACjBE,IAAI,CAAC,MAAM;QACV,IACE,IAAI,CAACjB,WAAW,CAACe,MAAM,MAAM,UAAS,IACtC,IAAI,CAACd,YAAY,CAACc,MAAM,MAAM,UAAS,EACvC,CACF,OAAO;UACL;UACA,MAAMG,KAAI,GAAI,IAAI,CAAChB,aAAa,CAACiB,SAAS,CACvCC,IAAI,IAAKA,IAAI,CAACR,EAAC,KAAMG,MACxB,CAAC;UACD,IAAIG,KAAI,KAAM,CAAC,CAAC,EAAE;YAChB,IAAI,CAAChB,aAAa,CAACgB,KAAK,CAAC,CAACG,eAAc,GACtC,IAAI,CAACrB,WAAW,CAACe,MAAM,CAAC;YAC1B,IAAI,CAACb,aAAa,CAACgB,KAAK,CAAC,CAACI,eAAc,GACtC,IAAI,CAACrB,YAAY,CAACc,MAAM,CAAC;UAC7B;QACF;MACF,CAAC,EACAQ,OAAO,CAAC,MAAM;QACb;QACA,IAAI,CAACC,cAAc,CAACT,MAAM,CAAC;MAC7B,CAAC,CAAC;IACN,CAAC;IAEDS,cAAcA,CAACT,MAAM,EAAE;MACrB,IAAI,CAAChB,QAAQ,CAACgB,MAAM,IAAI,CAAC,IAAI,CAAChB,QAAQ,CAACgB,MAAM,CAAC;IAChD,CAAC;IAED,MAAMC,QAAQA,CAACD,MAAM,EAAE;MACrB,IAAI;QACF,MAAMlB,KAAK,CAAC4B,GAAG,CAAE,6CAA4CV,MAAO,EAAC,EAAE;UACrEW,cAAc,EAAE,IAAI,CAAC1B,WAAW,CAACe,MAAM,CAAC;UACxCY,cAAc,EAAE,IAAI,CAAC1B,YAAY,CAACc,MAAM,CAAC;UACzCA,MAAM,EAAEA,MAAM;UACdP,aAAa,EAAE,IAAI,CAACA;QACtB,CAAC,CAAC;MACJ,EAAE,OAAOoB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF;EACF,CAAC;EAEDE,KAAK,EAAE;IACLpB,MAAMA,CAAA,EAAG;MACP,IAAI,CAACF,aAAY,GAAIC,QAAQ,CAAC,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAE,CAAC;IACtD;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
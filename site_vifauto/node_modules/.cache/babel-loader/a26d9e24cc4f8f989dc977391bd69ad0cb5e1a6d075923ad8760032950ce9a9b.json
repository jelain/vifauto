{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      fournisseur: {},\n      horaires: [],\n      notes: {},\n      showHoraire: false,\n      showNote: false,\n      editMode: {},\n      newOuverture: {},\n      newFermeture: {}\n    };\n  },\n  mounted() {\n    this.fetchData();\n  },\n  watch: {\n    $route() {\n      this.fetchData();\n    }\n  },\n  methods: {\n    async fetchData() {\n      const fournisseurId = parseInt(this.$route.params.id);\n      try {\n        const [fournisseurResponse, horairesResponse, notesResponse] = await Promise.all([axios.get(`http://localhost:3000/api/fournisseurs/id=${fournisseurId}`), axios.get(`http://localhost:3000/api/horaires/id=${fournisseurId}`), axios.get(`http://localhost:3000/api/notes/id=${fournisseurId}`)]);\n        this.fournisseur = fournisseurResponse.data;\n        this.horaires = horairesResponse.data;\n        this.notes = notesResponse.data[0];\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    },\n    toggleHoraire() {\n      this.showHoraire = !this.showHoraire;\n      this.showNote = false;\n    },\n    toggleNote() {\n      this.showNote = !this.showNote;\n      this.showHoraire = false;\n    },\n    toggleEditMode(jourId) {\n      this.editMode[jourId] = !this.editMode[jourId];\n    },\n    saveAndToggle(jourId) {\n      this.saveEdit(jourId).finally(() => {\n        this.toggleEditMode(jourId);\n      });\n    },\n    async saveEdit(jourId) {\n      try {\n        await axios.put(`http://localhost:3000/api/horaires/set/id=${jourId}`, {\n          heureOuverture: this.newOuverture[jourId],\n          heureFermeture: this.newFermeture[jourId],\n          jourId: jourId,\n          fournisseurId: parseInt(this.$route.params.id)\n        });\n      } catch (error) {\n        console.error(\"Error updating horaire:\", error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","fournisseur","horaires","notes","showHoraire","showNote","editMode","newOuverture","newFermeture","mounted","fetchData","watch","$route","methods","fournisseurId","parseInt","params","id","fournisseurResponse","horairesResponse","notesResponse","Promise","all","get","error","console","toggleHoraire","toggleNote","toggleEditMode","jourId","saveAndToggle","saveEdit","finally","put","heureOuverture","heureFermeture"],"sources":["/Users/jelain/Desktop/Stage VifAuto/GIT/vifauto/site_vifauto/src/components/FournisseurInfoBar.vue"],"sourcesContent":["<template>\n  <div class=\"info-bar\">\n    <div class=\"container\">\n      <div class=\"logo\">\n        <img\n          v-if=\"fournisseur.image_url\"\n          :src=\"`/fournisseur/${fournisseur.image_url}`\"\n          :alt=\"fournisseur.nom\"\n        />\n      </div>\n      <div class=\"info\">\n        <p :class=\"{ active: showHoraire }\" @click=\"toggleHoraire()\">\n          Horaires d'ouverture et de fermeture\n        </p>\n        <div class=\"horaire\" v-show=\"showHoraire\">\n          <table>\n            <tr v-for=\"jour in horaires\" :key=\"jour\">\n              <td class=\"jour\">{{ jour.jour_semaine }}</td>\n              <td class=\"heures\">\n                <template v-if=\"editMode[jour.id]\">\n                  <input type=\"time\" v-model=\"newOuverture[jour.id]\" />\n                  -\n                  <input type=\"time\" v-model=\"newFermeture[jour.id]\" />\n                  <i\n                    class=\"fa-solid fa-pen\"\n                    @click=\"saveAndToggle(jour.id)\"\n                  ></i>\n                </template>\n                <template v-else>\n                  {{\n                    jour.heure_ouverture\n                      ? jour.heure_ouverture.slice(0, 5)\n                      : \"Non renseigné\"\n                  }}\n                  -\n                  {{\n                    jour.heure_fermeture\n                      ? jour.heure_fermeture.slice(0, 5)\n                      : \"Non renseigné\"\n                  }}\n                  <i\n                    class=\"fa-solid fa-pen\"\n                    @click=\"toggleEditMode(jour.id)\"\n                  ></i>\n                </template>\n              </td>\n            </tr>\n          </table>\n        </div>\n        <p :class=\"{ active: showNote }\" @click=\"toggleNote()\">\n          Temps de réponse :\n          {{ notes.moyenne ? notes.moyenne + \"/20\" : \"Non renseigné\" }}\n        </p>\n        <div class=\"note\" v-show=\"showNote\">\n          <table>\n            <tr v-for=\"(value, key) in notes\" :key=\"key\">\n              <td class=\"critere\">{{ key }}</td>\n              <td class=\"note\">\n                {{ value ? value + \"/20\" : \"Non renseigné\" }}\n              </td>\n              <td><i class=\"fa-solid fa-pen\"></i></td>\n            </tr>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  data() {\n    return {\n      fournisseur: {},\n      horaires: [],\n      notes: {},\n      showHoraire: false,\n      showNote: false,\n      editMode: {},\n      newOuverture: {},\n      newFermeture: {},\n    };\n  },\n  mounted() {\n    this.fetchData();\n  },\n  watch: {\n    $route() {\n      this.fetchData();\n    },\n  },\n  methods: {\n    async fetchData() {\n      const fournisseurId = parseInt(this.$route.params.id);\n      try {\n        const [fournisseurResponse, horairesResponse, notesResponse] =\n          await Promise.all([\n            axios.get(\n              `http://localhost:3000/api/fournisseurs/id=${fournisseurId}`\n            ),\n            axios.get(`http://localhost:3000/api/horaires/id=${fournisseurId}`),\n            axios.get(`http://localhost:3000/api/notes/id=${fournisseurId}`),\n          ]);\n        this.fournisseur = fournisseurResponse.data;\n        this.horaires = horairesResponse.data;\n        this.notes = notesResponse.data[0];\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    },\n    toggleHoraire() {\n      this.showHoraire = !this.showHoraire;\n      this.showNote = false;\n    },\n    toggleNote() {\n      this.showNote = !this.showNote;\n      this.showHoraire = false;\n    },\n    toggleEditMode(jourId) {\n      this.editMode[jourId] = !this.editMode[jourId];\n    },\n    saveAndToggle(jourId) {\n      this.saveEdit(jourId).finally(() => {\n        this.toggleEditMode(jourId);\n      });\n    },\n    async saveEdit(jourId) {\n      try {\n        await axios.put(`http://localhost:3000/api/horaires/set/id=${jourId}`, {\n          heureOuverture: this.newOuverture[jourId],\n          heureFermeture: this.newFermeture[jourId],\n          jourId: jourId,\n          fournisseurId: parseInt(this.$route.params.id),\n        });\n      } catch (error) {\n        console.error(\"Error updating horaire:\", error);\n      }\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\n.info-bar {\n  display: flex;\n  justify-content: center;\n  background-color: white;\n  width: 100%;\n  .container {\n    display: flex;\n    justify-content: space-between;\n    margin: 15px 0;\n    width: 57em;\n    .logo {\n      height: 60px;\n      display: flex;\n      align-items: center;\n      img {\n        max-width: 150px;\n        max-height: 50px;\n      }\n    }\n    .info {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      p {\n        text-align: right;\n        font-weight: 400;\n        margin: 3px;\n      }\n      p:hover {\n        cursor: pointer;\n      }\n      .active {\n        font-weight: 500;\n      }\n      .horaire {\n        display: flex;\n        justify-content: right;\n        .jour {\n          text-align: right;\n          padding-right: 10px;\n        }\n      }\n\n      .heures,\n      .note {\n        i {\n          margin-left: 8px;\n          font-size: 0.8rem;\n        }\n        i:hover {\n          cursor: pointer;\n        }\n      }\n      .note {\n        display: flex;\n        justify-content: right;\n        .critere {\n          padding-right: 10px;\n        }\n      }\n    }\n    .info > *:nth-child(3) {\n      margin-top: 10px;\n    }\n  }\n}\n</style>\n"],"mappings":"AAsEA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,CAAC,CAAC;MACfC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,CAAC,CAAC;MACTC,WAAW,EAAE,KAAK;MAClBC,QAAQ,EAAE,KAAK;MACfC,QAAQ,EAAE,CAAC,CAAC;MACZC,YAAY,EAAE,CAAC,CAAC;MAChBC,YAAY,EAAE,CAAC;IACjB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,SAAS,CAAC,CAAC;EAClB,CAAC;EACDC,KAAK,EAAE;IACLC,MAAMA,CAAA,EAAG;MACP,IAAI,CAACF,SAAS,CAAC,CAAC;IAClB;EACF,CAAC;EACDG,OAAO,EAAE;IACP,MAAMH,SAASA,CAAA,EAAG;MAChB,MAAMI,aAAY,GAAIC,QAAQ,CAAC,IAAI,CAACH,MAAM,CAACI,MAAM,CAACC,EAAE,CAAC;MACrD,IAAI;QACF,MAAM,CAACC,mBAAmB,EAAEC,gBAAgB,EAAEC,aAAa,IACzD,MAAMC,OAAO,CAACC,GAAG,CAAC,CAChBvB,KAAK,CAACwB,GAAG,CACN,6CAA4CT,aAAc,EAC7D,CAAC,EACDf,KAAK,CAACwB,GAAG,CAAE,yCAAwCT,aAAc,EAAC,CAAC,EACnEf,KAAK,CAACwB,GAAG,CAAE,sCAAqCT,aAAc,EAAC,CAAC,CACjE,CAAC;QACJ,IAAI,CAACb,WAAU,GAAIiB,mBAAmB,CAAClB,IAAI;QAC3C,IAAI,CAACE,QAAO,GAAIiB,gBAAgB,CAACnB,IAAI;QACrC,IAAI,CAACG,KAAI,GAAIiB,aAAa,CAACpB,IAAI,CAAC,CAAC,CAAC;MACpC,EAAE,OAAOwB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IACDE,aAAaA,CAAA,EAAG;MACd,IAAI,CAACtB,WAAU,GAAI,CAAC,IAAI,CAACA,WAAW;MACpC,IAAI,CAACC,QAAO,GAAI,KAAK;IACvB,CAAC;IACDsB,UAAUA,CAAA,EAAG;MACX,IAAI,CAACtB,QAAO,GAAI,CAAC,IAAI,CAACA,QAAQ;MAC9B,IAAI,CAACD,WAAU,GAAI,KAAK;IAC1B,CAAC;IACDwB,cAAcA,CAACC,MAAM,EAAE;MACrB,IAAI,CAACvB,QAAQ,CAACuB,MAAM,IAAI,CAAC,IAAI,CAACvB,QAAQ,CAACuB,MAAM,CAAC;IAChD,CAAC;IACDC,aAAaA,CAACD,MAAM,EAAE;MACpB,IAAI,CAACE,QAAQ,CAACF,MAAM,CAAC,CAACG,OAAO,CAAC,MAAM;QAClC,IAAI,CAACJ,cAAc,CAACC,MAAM,CAAC;MAC7B,CAAC,CAAC;IACJ,CAAC;IACD,MAAME,QAAQA,CAACF,MAAM,EAAE;MACrB,IAAI;QACF,MAAM9B,KAAK,CAACkC,GAAG,CAAE,6CAA4CJ,MAAO,EAAC,EAAE;UACrEK,cAAc,EAAE,IAAI,CAAC3B,YAAY,CAACsB,MAAM,CAAC;UACzCM,cAAc,EAAE,IAAI,CAAC3B,YAAY,CAACqB,MAAM,CAAC;UACzCA,MAAM,EAAEA,MAAM;UACdf,aAAa,EAAEC,QAAQ,CAAC,IAAI,CAACH,MAAM,CAACI,MAAM,CAACC,EAAE;QAC/C,CAAC,CAAC;MACJ,EAAE,OAAOO,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import FournisseurHoraire from \"./FournisseurHoraire.vue\";\nimport FournisseurTempsReponse from \"./FournisseurTempsReponse.vue\";\nimport axios from \"axios\";\nexport default {\n  components: {\n    FournisseurHoraire,\n    FournisseurTempsReponse\n  },\n  data() {\n    return {\n      fournisseur: [],\n      showHoraire: false,\n      showNote: false\n    };\n  },\n  mounted() {\n    this.fournisseurId = parseInt(this.$route.params.id);\n    // Appel de la fonction pour récupérer les informations du fournisseur lors du montage du composant\n    this.getFournisseur();\n  },\n  methods: {\n    toggleHoraire() {\n      this.showHoraire = !this.showHoraire;\n      this.showNote = false; // Assurez-vous que showNote est faux quand showHoraire est vrai\n    },\n    toggleNote() {\n      this.showNote = !this.showNote;\n      this.showHoraire = false; // Assurez-vous que showHoraire est faux quand showNote est vrai\n    },\n    async getFournisseur() {\n      try {\n        const response = await axios.get(`http://localhost:3000/api/fournisseurs/id=${this.fournisseurId}`); // Remplacez l'URL par celle de votre API\n        this.fournisseur = response.data;\n      } catch (error) {\n        console.error(\"Error fetching fournisseur:\", error);\n      }\n    }\n  },\n  watch: {\n    $route() {\n      this.fournisseurId = parseInt(this.$route.params.id);\n      this.getFournisseur();\n    }\n  }\n};","map":{"version":3,"names":["FournisseurHoraire","FournisseurTempsReponse","axios","components","data","fournisseur","showHoraire","showNote","mounted","fournisseurId","parseInt","$route","params","id","getFournisseur","methods","toggleHoraire","toggleNote","response","get","error","console","watch"],"sources":["/Users/jelain/Desktop/Stage VifAuto/GIT/vifauto/site_vifauto/src/components/FournisseurInfoBar.vue"],"sourcesContent":["<template>\n  <div class=\"info-bar\">\n    <div class=\"container\">\n      <div class=\"logo\">\n        <img\n          v-if=\"fournisseur.image_url\"\n          :src=\"`/fournisseur/${fournisseur.image_url}`\"\n          :alt=\"fournisseur.nom\"\n        />\n      </div>\n      <div class=\"info\">\n        <FournisseurHoraire\n          :isHoraireVisible=\"showHoraire\"\n          @toggleHoraire=\"toggleHoraire\"\n        />\n        <FournisseurTempsReponse\n          :showNote=\"showNote\"\n          @toggleNote=\"toggleNote\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport FournisseurHoraire from \"./FournisseurHoraire.vue\";\nimport FournisseurTempsReponse from \"./FournisseurTempsReponse.vue\";\nimport axios from \"axios\";\nexport default {\n  components: {\n    FournisseurHoraire,\n    FournisseurTempsReponse,\n  },\n  data() {\n    return {\n      fournisseur: [],\n      showHoraire: false,\n      showNote: false,\n    };\n  },\n  mounted() {\n    this.fournisseurId = parseInt(this.$route.params.id);\n    // Appel de la fonction pour récupérer les informations du fournisseur lors du montage du composant\n    this.getFournisseur();\n  },\n  methods: {\n    toggleHoraire() {\n      this.showHoraire = !this.showHoraire;\n      this.showNote = false; // Assurez-vous que showNote est faux quand showHoraire est vrai\n    },\n    toggleNote() {\n      this.showNote = !this.showNote;\n      this.showHoraire = false; // Assurez-vous que showHoraire est faux quand showNote est vrai\n    },\n\n    async getFournisseur() {\n      try {\n        const response = await axios.get(\n          `http://localhost:3000/api/fournisseurs/id=${this.fournisseurId}`\n        ); // Remplacez l'URL par celle de votre API\n        this.fournisseur = response.data;\n      } catch (error) {\n        console.error(\"Error fetching fournisseur:\", error);\n      }\n    },\n  },\n  watch: {\n    $route() {\n      this.fournisseurId = parseInt(this.$route.params.id);\n      this.getFournisseur();\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\n.info-bar {\n  display: flex;\n  justify-content: center;\n  background-color: white;\n  width: 100%;\n  .container {\n    display: flex;\n    justify-content: space-between;\n    margin: 15px 0;\n    width: 57em;\n    .logo {\n      height: 60px;\n      display: flex;\n      align-items: center;\n      img {\n        max-width: 150px;\n        max-height: 50px;\n      }\n    }\n    .info {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      p {\n        text-align: right;\n        font-weight: 400;\n        margin: 3px;\n      }\n      p:hover {\n        cursor: pointer;\n      }\n      .active {\n        font-weight: 500;\n      }\n\n      .heures,\n      .note {\n        i {\n          margin-left: 8px;\n          font-size: 0.8rem;\n        }\n        i:hover {\n          cursor: pointer;\n        }\n      }\n    }\n    .info > *:nth-child(3) {\n      margin-top: 10px;\n    }\n  }\n}\n</style>\n"],"mappings":"AAyBA,OAAOA,kBAAiB,MAAO,0BAA0B;AACzD,OAAOC,uBAAsB,MAAO,+BAA+B;AACnE,OAAOC,KAAI,MAAO,OAAO;AACzB,eAAe;EACbC,UAAU,EAAE;IACVH,kBAAkB;IAClBC;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,EAAE;MACfC,WAAW,EAAE,KAAK;MAClBC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,aAAY,GAAIC,QAAQ,CAAC,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAE,CAAC;IACpD;IACA,IAAI,CAACC,cAAc,CAAC,CAAC;EACvB,CAAC;EACDC,OAAO,EAAE;IACPC,aAAaA,CAAA,EAAG;MACd,IAAI,CAACV,WAAU,GAAI,CAAC,IAAI,CAACA,WAAW;MACpC,IAAI,CAACC,QAAO,GAAI,KAAK,EAAE;IACzB,CAAC;IACDU,UAAUA,CAAA,EAAG;MACX,IAAI,CAACV,QAAO,GAAI,CAAC,IAAI,CAACA,QAAQ;MAC9B,IAAI,CAACD,WAAU,GAAI,KAAK,EAAE;IAC5B,CAAC;IAED,MAAMQ,cAAcA,CAAA,EAAG;MACrB,IAAI;QACF,MAAMI,QAAO,GAAI,MAAMhB,KAAK,CAACiB,GAAG,CAC7B,6CAA4C,IAAI,CAACV,aAAc,EAClE,CAAC,EAAE;QACH,IAAI,CAACJ,WAAU,GAAIa,QAAQ,CAACd,IAAI;MAClC,EAAE,OAAOgB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF;EACF,CAAC;EACDE,KAAK,EAAE;IACLX,MAAMA,CAAA,EAAG;MACP,IAAI,CAACF,aAAY,GAAIC,QAAQ,CAAC,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAE,CAAC;MACpD,IAAI,CAACC,cAAc,CAAC,CAAC;IACvB;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}